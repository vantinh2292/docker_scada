[{"id":"67bf0d5d2a1fcf16","type":"tab","label":"Build Package","disabled":false,"info":"","env":[]},{"id":"78560ab9ca2b5d16","type":"tab","label":"Communication","disabled":false,"info":"","env":[]},{"id":"dc9cf18bb9eee563","type":"tab","label":"OMRON TRAINING","disabled":false,"info":"","env":[]},{"id":"05ce970d4b4430dd","type":"subflow","name":"Subflow 1","info":"","category":"","in":[{"x":50,"y":30.80000001192093,"wires":[]}],"out":[],"env":[],"meta":{},"color":"#DDAA99","status":{"x":400,"y":140,"wires":[]}},{"id":"158869de576da004","type":"group","z":"dc9cf18bb9eee563","name":"CONFIG PROJECT","style":{"label":true},"nodes":["cbc011a13d215ced","6cd0bf8f4be83aa1","2196ba820f1cf182","73bba3dc402ce220"],"x":54,"y":19,"w":532,"h":122},{"id":"d96a71a16749c22d","type":"group","z":"78560ab9ca2b5d16","name":"MQTT handle client request","style":{"label":true},"nodes":["b95c81f2978a9167","bab0278084f9c369","20279a9a2202dcd0","c2ed1cb639b00da8","e279206013139dcd","3e5260e168b09096","9b21fb82ac7b710f","67c65820a4bec1b9","e5e5c868b8c3169a","7b6793508f3b8cc2"],"x":54,"y":19,"w":592,"h":362},{"id":"2616ecf5c6a8dfdb","type":"group","z":"dc9cf18bb9eee563","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["439df5510f8b7859","8fdbbb2b275fa32d","c6862ae55330b2db","da792e477ecfa9e0","bb27f69b159c3f02","c5e0539cf3a7dc86","c165e8f8551a24b3","e862786273c2c715","c2046126a48ff072"],"x":94,"y":1279,"w":792,"h":202},{"id":"04f7ad02178e0f9f","type":"group","z":"67bf0d5d2a1fcf16","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["b1eed42acb7e7bb6"],"x":28,"y":13,"w":904,"h":774},{"id":"593332529bf305f5","type":"group","z":"78560ab9ca2b5d16","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["daaddeeb656fd7e1","db0496c4e9f7da3b","b20a3b2554f3b99b","aef952cd9b882e16"],"x":34,"y":439,"w":732,"h":82},{"id":"b1eed42acb7e7bb6","type":"group","z":"67bf0d5d2a1fcf16","g":"04f7ad02178e0f9f","name":"BUILD PACKAGE","style":{"fill":"#d1d1d1","label":true,"stroke":"#777777","color":"#ff0000"},"nodes":["934c847262f0ef05","47e9ce831e32c569","ade3b1aef52ce636","b883d199addc05cb","9a6a3ceab77bb393","c1cefca09fbe3863","bbe46c6c9d62aea7","12c6d405a9835945","ae4f2083c378b089","ab6d1cb24d983f66","f6db8fa514cb1a63","433f8a638ccee0a0","65586867b69a03d5","f468bb0cd9e8fecf","9a0b7d1f6a536d04","5ab00dec30fb8fe7","920d1cf4555365d1","48d10e0bc651ee0e","5b30a2094d88507b","a089fc53b3a2d46e","f535149b3186669c","38495bc9df173a01","53872094b9ff9c47","99bf48afea45efef","7917f1ffa53139b3","a61d729c4c4b1e0c","721c945949a227d7","8e2a1c01f5b8681f","a814d644b3463d02","6f1be630ef0e0168","aa0237c8c172df4e","866ddc7aaf452dba","c82c6e58437a3bf0","a2fa666c98b60512","dfa2713d86e77d8c","ab1ce343b9ef2063"],"x":54,"y":39,"w":852,"h":722},{"id":"73bba3dc402ce220","type":"junction","z":"dc9cf18bb9eee563","g":"158869de576da004","x":240,"y":100,"wires":[["cbc011a13d215ced"]]},{"id":"bbe46c6c9d62aea7","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":160,"wires":[["47e9ce831e32c569"]]},{"id":"12c6d405a9835945","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":200,"wires":[["47e9ce831e32c569"]]},{"id":"ae4f2083c378b089","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":280,"wires":[["47e9ce831e32c569"]]},{"id":"433f8a638ccee0a0","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":360,"wires":[["47e9ce831e32c569"]]},{"id":"f468bb0cd9e8fecf","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":400,"wires":[["47e9ce831e32c569"]]},{"id":"920d1cf4555365d1","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":320,"wires":[["47e9ce831e32c569"]]},{"id":"48d10e0bc651ee0e","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":440,"wires":[["47e9ce831e32c569"]]},{"id":"5b30a2094d88507b","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":480,"wires":[["47e9ce831e32c569"]]},{"id":"f535149b3186669c","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":120,"wires":[["47e9ce831e32c569"]]},{"id":"99bf48afea45efef","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":560,"wires":[["47e9ce831e32c569"]]},{"id":"a61d729c4c4b1e0c","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":600,"wires":[["47e9ce831e32c569"]]},{"id":"721c945949a227d7","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":520,"wires":[["47e9ce831e32c569"]]},{"id":"a814d644b3463d02","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":640,"wires":[["47e9ce831e32c569"]]},{"id":"aa0237c8c172df4e","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":680,"wires":[["47e9ce831e32c569"]]},{"id":"c82c6e58437a3bf0","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":720,"wires":[["47e9ce831e32c569"]]},{"id":"ab1ce343b9ef2063","type":"junction","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","x":340,"y":80,"wires":[["47e9ce831e32c569"]]},{"id":"cf0ae1d58e6000b5","type":"mqtt-broker","name":"Brocker Local","broker":"localhost","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"72e48ed5298b1b7a","type":"tls-config","name":"","cert":"","key":"","ca":"","certname":"","keyname":"","caname":"","servername":"","verifyservercert":false,"alpnprotocol":""},{"id":"2eaf96fabb89e5b9","type":"sqlitedb","db":"./db/CheckWeigh_ListDataUser.db","mode":"RWC"},{"id":"4da24c56a89316ed","type":"sqlitedb","db":"./db/Report_CheckWeigh.db","mode":"RWC"},{"id":"1fb1d414ca07ad2c","type":"sqlitedb","db":"./db/Report_CheckWeigh.db","mode":"RWC"},{"id":"4cabebdcc173f658","type":"sqlitedb","db":"./db/Report_CheckWeigh.db","mode":"RWC"},{"id":"a811dd20332e9e5f","type":"sqlitedb","db":"./db/Report_MobileRobot.db","mode":"RWC"},{"id":"1cb8e3989b105072","type":"sqlitedb","db":"./db/VibrationCycleTime.db","mode":"RWC"},{"id":"00bbaea9f902ff99","type":"sqlitedb","db":"./db/Report_MobileRobot.db","mode":"RWC"},{"id":"934c847262f0ef05","type":"function","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"NPM-PACK-ALL","func":"// const child = childProcess.exec(\"npm pack --output ../\", {\nconst child = childProcess.exec(`npm pack`, {\n    cwd: msg.payload\n}, function (error, stdout, stderr) {\n    if (error) {\n        node.warn(error);\n        node.warn(stderr); // Log stderr\n    } else {\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 5000);\n    }\n});","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[{"var":"childProcess","module":"child_process"}],"x":660,"y":380,"wires":[["b883d199addc05cb"]]},{"id":"47e9ce831e32c569","type":"function","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"Ugly File","func":"const minify = global.get(\"minify\");\nconst uglifyJS = global.get(\"uglifyJS\");\n\nasync function compress(input, output) {\n    return await new Promise((res, rej) => {\n        minify({\n            compressor: uglifyJS,\n            input: input,\n            output: output,\n            callback: function (err, min) {\n                if (!err) {\n                    res(true)\n                } else {\n                    rej(false)\n                }\n            }\n        });\n    });\n}\nif (msg.payload == 'CONFIG_SERVER') {\n    let res = await compress('myPackage/config_server/config_server_original.js', 'myPackage/config_server/package/config_server.js');\n    if (res) {\n        msg.payload = 'myPackage/config_server/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'CONFIG_PROJECT') {\n    let res = await compress('myPackage/config_project/config_project_original.js', 'myPackage/config_project/package/config_project.js');\n    if (res) {\n        msg.payload = 'myPackage/config_project/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'CONFIG_PAGE') {\n    let res = await compress('myPackage/config_page/config_page_original.js', 'myPackage/config_page/package/config_page.js');\n    if (res) {\n        msg.payload = 'myPackage/config_page/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'PLC_OMRON') {\n    let res = await compress('myPackage/plc_omron/plc_omron_original.js', 'myPackage/plc_omron/package/plc_omron.js');\n    if (res) {\n        msg.payload = 'myPackage/plc_omron/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'PLC_MODBUS') {\n    let res = await compress('myPackage/plc_modbus/plc_modbus_original.js', 'myPackage/plc_modbus/package/plc_modbus.js');\n    if (res) {\n        msg.payload = 'myPackage/plc_modbus/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'PLC_MODBUS_NODE_RED') {\n    let res = await compress('myPackage/plc_modbus_node_red/plc_modbus_node_red_original.js', 'myPackage/plc_modbus_node_red/package/plc_modbus_node_red.js');\n    if (res) {\n        msg.payload = 'myPackage/plc_modbus_node_red/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'PLC_MODBUS_SERVER') {\n    let res = await compress('myPackage/plc_modbus_server/plc_modbus_server_original.js', 'myPackage/plc_modbus_server/package/plc_modbus_server.js');\n    if (res) {\n        msg.payload = 'myPackage/plc_modbus_server/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'SOCKET_CLIENT') {\n    let res = await compress('myPackage/socket_client/socket_client_original.js', 'myPackage/socket_client/package/socket_client.js');\n    if (res) {\n        msg.payload = 'myPackage/socket_client/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'CONFIG_WEB') {\n    let res = await compress('myPackage/config_web/config_web_original.js', 'myPackage/config_web/package/config_web.js');\n    if (res) {\n        msg.payload = 'myPackage/config_web/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'BCRYPT') {\n    let res = await compress('myPackage/bcrypt_generator/bcrypt_generator_original.js', 'myPackage/bcrypt_generator/package/bcrypt_generator.js');\n    if (res) {\n        msg.payload = 'myPackage/bcrypt_generator/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'SIEMENS') {\n    let res = await compress('myPackage/plc_siemens/plc_siemens_original.js', 'myPackage/plc_siemens/package/plc_siemens.js');\n    if (res) {\n        msg.payload = 'myPackage/plc_siemens/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'VNC') {\n    let res = await compress('myPackage/vnc_setup/vnc_setup_original.js', 'myPackage/vnc_setup/package/vnc_setup.js');\n    if (res) {\n        msg.payload = 'myPackage/vnc_setup/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\n\nif (msg.payload == 'MobileRobot') {\n\n    let res = await compress('myPackage/omron_mobile_robot/omron_mobile_robot_original.js', 'myPackage/omron_mobile_robot/package/omron_mobile_robot.js');\n    if (res) {\n        msg.payload = 'myPackage/omron_mobile_robot/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'CONFIG_WEB_NEXTJS') {\n    let res = await compress('myPackage/config_web_nextjs/config_web_nextjs_original.js', 'myPackage/config_web_nextjs/package/config_web_nextjs.js');\n    if (res) {\n        msg.payload = 'myPackage/config_web_nextjs/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'SCADA') {\n    let res = await compress('myPackage/scada/scada_original.js', 'myPackage/scada/package/scada.js');\n    if (res) {\n        msg.payload = 'myPackage/scada/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'RN_DESIGN') {\n    let res = await compress('myPackage/rn_design/rn_design_original.js', 'myPackage/rn_design/package/rn_design.js');\n    if (res) {\n        msg.payload = 'myPackage/rn_design/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'OPCUA') {\n    let res = await compress('myPackage/opcua_client/opcua_client_original.js', 'myPackage/opcua_client/package/opcua_client.js');\n    if (res) {\n        msg.payload = 'myPackage/opcua_client/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'ACE') {\n    let res = await compress('myPackage/ace/ace_original.js', 'myPackage/ace/package/ace.js');\n    if (res) {\n        msg.payload = 'myPackage/ace/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\nif (msg.payload == 'Siemens') {\n    let res = await compress('myPackage/plc_siemens/plc_siemens_original.js', 'myPackage/plc_siemens/package/plc_siemens.js');\n    if (res) {\n        msg.payload = 'myPackage/plc_siemens/package'\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Success\" });\n        const myTimeout = setTimeout(() => {\n            node.status({});\n        }, 3000);\n        return msg;\n    }\n}\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\nsetTimeout(()=>{\n    node.status({ });\n},2000)","libs":[],"x":500,"y":380,"wires":[["934c847262f0ef05"]]},{"id":"ade3b1aef52ce636","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"PLC_OMRON","payloadType":"str","x":170,"y":160,"wires":[["bbe46c6c9d62aea7"]]},{"id":"b883d199addc05cb","type":"debug","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"debug","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":810,"y":380,"wires":[]},{"id":"9a6a3ceab77bb393","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"PLC_MODBUS","payloadType":"str","x":180,"y":200,"wires":[["12c6d405a9835945"]]},{"id":"c1cefca09fbe3863","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"SOCKET_CLIENT","payloadType":"str","x":190,"y":280,"wires":[["ae4f2083c378b089"]]},{"id":"ab6d1cb24d983f66","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"BCRYPT","payloadType":"str","x":160,"y":320,"wires":[["920d1cf4555365d1"]]},{"id":"f6db8fa514cb1a63","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"SIEMENS","payloadType":"str","x":160,"y":360,"wires":[["433f8a638ccee0a0"]]},{"id":"65586867b69a03d5","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"VNC","payloadType":"str","x":150,"y":400,"wires":[["f468bb0cd9e8fecf"]]},{"id":"9a0b7d1f6a536d04","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"MobileRobot","payloadType":"str","x":170,"y":440,"wires":[["48d10e0bc651ee0e"]]},{"id":"5ab00dec30fb8fe7","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"PLC_MODBUS_SERVER","payloadType":"str","x":210,"y":480,"wires":[["5b30a2094d88507b"]]},{"id":"a089fc53b3a2d46e","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"CONFIG_PAGE","payloadType":"str","x":180,"y":120,"wires":[["f535149b3186669c"]]},{"id":"38495bc9df173a01","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"CONFIG_WEB_NEXTJS","payloadType":"str","x":210,"y":520,"wires":[["721c945949a227d7"]]},{"id":"53872094b9ff9c47","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"SCADA","payloadType":"str","x":150,"y":560,"wires":[["99bf48afea45efef"]]},{"id":"7917f1ffa53139b3","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"RN_DESIGN","payloadType":"str","x":170,"y":600,"wires":[["a61d729c4c4b1e0c"]]},{"id":"8e2a1c01f5b8681f","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"OPCUA","payloadType":"str","x":150,"y":640,"wires":[["a814d644b3463d02"]]},{"id":"6f1be630ef0e0168","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"ACE","payloadType":"str","x":150,"y":680,"wires":[["aa0237c8c172df4e"]]},{"id":"866ddc7aaf452dba","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"Siemens","payloadType":"str","x":160,"y":720,"wires":[["c82c6e58437a3bf0"]]},{"id":"a2fa666c98b60512","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"PLC_MODBUS_NODE_RED","payloadType":"str","x":220,"y":240,"wires":[["47e9ce831e32c569"]]},{"id":"dfa2713d86e77d8c","type":"inject","z":"67bf0d5d2a1fcf16","g":"b1eed42acb7e7bb6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"CONFIG_PROJECT","payloadType":"str","x":190,"y":80,"wires":[["ab1ce343b9ef2063"]]},{"id":"daaddeeb656fd7e1","type":"trigger","z":"78560ab9ca2b5d16","g":"593332529bf305f5","name":"","op1":"1","op2":"0","op1type":"str","op2type":"str","duration":"-500","extend":false,"overrideDelay":false,"units":"ms","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":340,"y":480,"wires":[["b20a3b2554f3b99b"]]},{"id":"db0496c4e9f7da3b","type":"inject","z":"78560ab9ca2b5d16","g":"593332529bf305f5","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":480,"wires":[["daaddeeb656fd7e1"]]},{"id":"b20a3b2554f3b99b","type":"function","z":"78560ab9ca2b5d16","g":"593332529bf305f5","name":"Alarm","func":"// setInterval(() => {\ntry {\n    let DataAlarm = global.get('Set_Mqtt_DataAlarm')\n    if (Array.isArray(DataAlarm)) {\n        if (DataAlarm.length > 0) {\n            let dataAlarmCheck = DataAlarm[0]\n            let data = {\n                type: dataAlarmCheck.Type,\n                message: dataAlarmCheck.Message,\n            }\n            msg.payload = data\n            node.send(msg)\n            let DataAlarm2 = global.get('Set_Mqtt_DataAlarm').slice(1)\n            global.set('Set_Mqtt_DataAlarm', DataAlarm2)\n        }\n\n    }\n} catch (error) {\n    node.warn(error);\n};\n\n\n// }, 500)","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":480,"wires":[["aef952cd9b882e16"]]},{"id":"aef952cd9b882e16","type":"mqtt out","z":"78560ab9ca2b5d16","g":"593332529bf305f5","name":"","topic":"MQTT_Alarm","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"cf0ae1d58e6000b5","x":660,"y":480,"wires":[]},{"id":"b95c81f2978a9167","type":"function","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"PROCESS SYSTEM","func":"var VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variables = global.get(\"Variable\");\n\nlet data=msg.payload\nif (data.typeDevice == 'System') {\n    SubFunction.ProcessSocketIO_System(data)\n}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":60,"wires":[[]]},{"id":"bab0278084f9c369","type":"aedes broker","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"","mqtt_port":"1883","mqtt_ws_bind":"port","mqtt_ws_port":"8083","mqtt_ws_path":"mqtt","cert":"","key":"","certname":"","keyname":"","persistence_bind":"memory","dburl":"","usetls":false,"x":170,"y":260,"wires":[[],[]]},{"id":"20279a9a2202dcd0","type":"mqtt in","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"","topic":"Client-send-data","qos":"0","datatype":"auto-detect","broker":"cf0ae1d58e6000b5","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":200,"wires":[["b95c81f2978a9167","c2ed1cb639b00da8","e279206013139dcd","3e5260e168b09096","9b21fb82ac7b710f","67c65820a4bec1b9","e5e5c868b8c3169a","7b6793508f3b8cc2"]]},{"id":"c2ed1cb639b00da8","type":"function","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"PROCESS FINS OMRON","func":"var VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variable = global.get(\"Variable\");\n\nlet data = msg.payload\n\nfunction checkVariableTypeNumber(variable) {\n    if (typeof variable === 'string' && !isNaN(Number(variable))) {\n        return true;\n    }\n    if (typeof variable === 'number') {\n        return true;\n    }\n    return false;\n}\n\nfunction ProcessSocketIO_Fins_Flexible(data) {\n    node.warn(data);\n    //Bit\n    if (data.NameCommand === 'BitForce' && data.tag.length > 0 && checkVariableTypeNumber(data.idDevice) && data.typeDevice === 'Fins-Omron') {\n        const regex = /^\\d+\\.\\d+$/;\n        if (regex.test(data.tag)) {\n            //flexible\n            let tempTag = data.tag.split('.')\n            let Word = tempTag[0]\n            let Bit = tempTag[1]\n\n            if (!VariableSystem.TimeDelayWriteWordBitAdjust[parseInt(data.idDevice)]) {\n                Variable.OldWordBitAdjust[parseInt(data.idDevice)] = Variable.Word[parseInt(data.idDevice)].slice()\n            }\n\n\n            if (tempTag.length == 2 && !isNaN(Word) && !isNaN(Bit)) {\n                let mask = 1 << parseInt(Bit);\n                let currentWordOfBitAdjust = Variable.Word[parseInt(data.idDevice)][parseInt(Word)]\n                if (data.mode == 2) {\n                    node.warn(currentWordOfBitAdjust);\n                    currentWordOfBitAdjust ^= mask;\n                }\n                if (data.mode == 0) {\n                    currentWordOfBitAdjust &= ~mask;\n                    node.warn(currentWordOfBitAdjust);\n                }\n                if (data.mode == 1) {\n                    currentWordOfBitAdjust |= mask;\n                    node.warn(currentWordOfBitAdjust);\n                }\n                VariableSystem.TimeDelayWriteWordBitAdjust[parseInt(data.idDevice)] = 10\n                VariableSystem.COMMUNICATION_PLC_OMRON[parseInt(data.idDevice)].write('D' + Word, [currentWordOfBitAdjust]);\n            }\n        }\n    }\n\n    //Number\n    if (data.NameCommand === 'NumberForce' && data.tag.length > 0 && data.typeDevice === 'Fins-Omron') {\n        if (checkVariableTypeNumber(data.idDevice)) {\n            if (data.dataType === 'Word' && checkVariableTypeNumber(data.tag)) {\n                let DataWrite\n                if (parseInt(data.value) >= 0 && parseInt(data.value) < 65536) {\n                    DataWrite = parseInt(data.value)\n                    VariableSystem.COMMUNICATION_PLC_OMRON[parseInt(data.idDevice)].write('D' + parseInt(data.tag), [DataWrite]);\n                } else if (parseInt(data.value) < 0 && parseInt(data.value) > -32767) {\n                    DataWrite = parseInt(data.value) + 65536\n                    VariableSystem.COMMUNICATION_PLC_OMRON[parseInt(data.idDevice)].write('D' + parseInt(data.tag), [DataWrite]);\n                }\n            }\n            if (data.dataType === 'DWord' && checkVariableTypeNumber(data.tag)) {\n                var heightValueDWordAdjust = 0\n                var lowValueDWordAdjust = 0\n                if (parseInt(data.value) >= 0 && parseInt(data.value) < 4294967296) {\n                    heightValueDWordAdjust = parseInt(data.value / 65536);\n                    lowValueDWordAdjust = parseInt(data.value % 65536);\n                    VariableSystem.COMMUNICATION_PLC_OMRON[parseInt(data.idDevice)].write('D' + parseInt(data.tag), [lowValueDWordAdjust, heightValueDWordAdjust]);\n                }\n                if (parseInt(data.value) < 0 && parseInt(data.value) > -2147483648) {\n                    let tempValue = 4294967296 + parseInt(data.value)\n                    heightValueDWordAdjust = parseInt(tempValue / 65536);\n                    lowValueDWordAdjust = parseInt(tempValue % 65536);\n                    VariableSystem.COMMUNICATION_PLC_OMRON[parseInt(data.idDevice)].write('D' + parseInt(data.tag), [lowValueDWordAdjust, heightValueDWordAdjust]);\n                }\n            }\n        }\n    }\n\n    //TextFieldInput\n    if (data.NameCommand === 'TextFieldInput' && !isNaN(data.tag) && data.typeDevice === 'Fins-Omron') {\n        var myBuffer = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        var str = data.value;\n        var buffer = new Buffer(str, 'utf8');\n        for (let i = 0; i < buffer.length; i++) {\n            if (i < 40) myBuffer[i] = buffer[i];\n        }\n        let arr1 = [113, 113, data.tag, data.tag, 0, 0, 0, 0, 0, 0, 0,]\n        let arrResult = arr1.concat(myBuffer)\n\n        if (data.idDevice == '0') {\n            Variable.TextFieldInput[0][parseInt(data.tag)] = arrResult\n        } else {\n            if (parseInt(data.idDevice)) {\n                VariableSystem.COMMUNICATION_PLC_OMRON[parseInt(data.idDevice)].write('D1000', arrResult);\n            }\n        }\n    }\n}\n\nif (data.typeDevice == 'Fins-Omron') {\n    SubFunction.ProcessSocketIO_Fins_Flexible(data)\n}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":100,"wires":[[]]},{"id":"e279206013139dcd","type":"function","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"PROCESS MODBUS SERVER","func":"var VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variables = global.get(\"Variable\");\n\nlet data=msg.payload\n\nif (data.typeDevice == 'Modbus-Server') {\n    node.warn(data)\n    SubFunction.ProcessSocketIO_Modbus_Server(data)\n    //BitAdjust\n    if (data.NameCommand === 'BitAdjustForce' && !isNaN(data.tag)) {\n        if (data.tag !== '') {\n            if(data.mode==2){\n                Variables.StoreModbusServerBit[parseInt(data.idDevice)][parseInt(VariableSystem.PLC_BitStartBitAdjust[parseInt(data.idDevice)]) + parseInt(data.tag)] = !Variables.StoreModbusServerBit[parseInt(data.idDevice)][parseInt(VariableSystem.PLC_BitStartBitAdjust[parseInt(data.idDevice)]) + parseInt(data.tag)]\n            }\n            if (data.mode == 0) {\n                Variables.StoreModbusServerBit[parseInt(data.idDevice)][parseInt(VariableSystem.PLC_BitStartBitAdjust[parseInt(data.idDevice)]) + parseInt(data.tag)] = false\n            }\n            if (data.mode == 1) {\n                Variables.StoreModbusServerBit[parseInt(data.idDevice)][parseInt(VariableSystem.PLC_BitStartBitAdjust[parseInt(data.idDevice)]) + parseInt(data.tag)] = true\n            }\n        }\n    }\n    // //WordAdjust\n    if (data.NameCommand === 'WordAdjustForce' && !isNaN(data.tag)) {\n        if (data.tag !== '') {\n            Variables.StoreModbusServerReg[parseInt(data.idDevice)][parseInt(VariableSystem.PLC_WordStartWordAdjust[parseInt(data.idDevice)]) + parseInt(data.tag)] = data.value\n        }\n    }\n}\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":180,"wires":[[]]},{"id":"3e5260e168b09096","type":"function","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"PROCESS MOBILE ROBOT OMRON","func":"var VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variables = global.get(\"Variable\");\n\nlet data = msg.payload\n\nif (data.typeDevice == 'ARCL-MobileRobot') {\n    if (data.NameCommand === 'BitForce' && isNaN(data.tag)) {\n        VariableSystem.COMMUNICATION_MOBILE_ROBOT[parseInt(data.idDevice)].write(data.tag + '\\r\\n')\n        VariableSystem.COMMUNICATION_MOBILE_ROBOT_TIMER[parseInt(data.idDevice)]=3\n    }\n}\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":220,"wires":[[]]},{"id":"9b21fb82ac7b710f","type":"function","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"PROCESS MODBUS CLIENT","func":"var VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variables = global.get(\"Variable\");\n\nlet data = msg.payload\nif (data.typeDevice == 'Modbus-Client') {\n    SubFunction.ProcessSocketIO_Modbus(data)\n}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":140,"wires":[[]]},{"id":"67c65820a4bec1b9","type":"function","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"PROCESS OPCUA","func":"var VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variables = global.get(\"Variable\");\n\nlet data = msg.payload\nif (data.typeDevice == 'OPC-UA') {\n    node.warn(data);\n    SubFunction.ProcessSocketIO_OPCUA(data)\n}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":260,"wires":[[]]},{"id":"e5e5c868b8c3169a","type":"function","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"PROCESS ACE","func":"var VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variable = global.get(\"Variable\");\n\nlet data = msg.payload\nif (data.typeDevice == 'ACE') {\n    SubFunction.ProcessSocketIO_ACE(data)\n}","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":300,"wires":[[]]},{"id":"7b6793508f3b8cc2","type":"function","z":"78560ab9ca2b5d16","g":"d96a71a16749c22d","name":"PROCESS PROFINET","func":"var VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variables = global.get(\"Variable\");\n\nlet data = msg.payload\nif (data.typeDevice == 'ProfiNet') {\n    node.warn(data);\n    SubFunction.ProcessSocketIO_ProfiNet(data)\n}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":340,"wires":[[]]},{"id":"7d83c61ce99a5e56","type":"inject","z":"dc9cf18bb9eee563","name":"START_SYSTEM","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":380,"wires":[["901e1b866a4b5a22","3f4d218b69c4842e","b24f2841bb3c7811"]]},{"id":"30f9ecc03c033b18","type":"plc_omron","z":"dc9cf18bb9eee563","name":"PLC NJR","host":"192.168.1.40","port":"9600","indexPLC":"3","topic":"","PLC_Interval":"300","PLC_Length_ReadWrite":"1000","PLC_Word_Start_ReadWrite":"500","x":660,"y":240,"wires":[[]]},{"id":"b24f2841bb3c7811","type":"Omron Mobile Robot","z":"dc9cf18bb9eee563","name":"","host":"192.168.1.100","password":"omron","port":"7171","indexPLC":"1","x":440,"y":320,"wires":[["3ec021e3ca4f0699"]]},{"id":"901e1b866a4b5a22","type":"function","z":"dc9cf18bb9eee563","name":"Initial","func":"// var Variable = global.get(\"Variable\");\nvar VariableSystem = global.get(\"VariableSystem\");\nvar SubFunction = global.get(\"SubFunction\");\nvar Variables = global.get(\"Variable\");\n\nVariables.Percent[0] = new Array(20).fill(0);\nVariables.BitAdjust[0] = new Array(20).fill(0);\nVariables.BitDisplay[0] = new Array(20).fill(0);\nVariables.WordAdjust[0] = new Array(20).fill(0);\nVariables.WordDisplay[0] = new Array(20).fill(0);\nVariables.DWordAdjust[0] = new Array(20).fill(0);\nVariables.DWordDisplay[0] = new Array(20).fill(0);\n// Variables.ListString[0] = new Array(20).fill('---');\n// Variables.TextField[0] = new Array(20).fill('---');\nVariables.TextFieldInput[0] = new Array(10).fill(0);\n\nglobal.set('OldDestination','')","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":380,"wires":[[]]},{"id":"cbc011a13d215ced","type":"Config Project","z":"dc9cf18bb9eee563","g":"158869de576da004","license":"$2a$12$d7VKK2YKRXT6Vl8cCV69Y.CfkT.55mBQazNzhmdjtGVDn917rRbcK","port":"8001","mqtt_host":"localhost","mqtt_port":"1883","dbpath":"OmronTraining","x":430,"y":80,"wires":[[]]},{"id":"6cd0bf8f4be83aa1","type":"inject","z":"dc9cf18bb9eee563","g":"158869de576da004","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"WRITE","payloadType":"str","x":150,"y":100,"wires":[["73bba3dc402ce220"]]},{"id":"2196ba820f1cf182","type":"inject","z":"dc9cf18bb9eee563","g":"158869de576da004","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"TURN_OFF","payloadType":"str","x":170,"y":60,"wires":[["cbc011a13d215ced"]]},{"id":"3f4d218b69c4842e","type":"Scada Web Begin","z":"dc9cf18bb9eee563","x":340,"y":500,"wires":[["267da29bf389f8b6"]]},{"id":"18b225fe8aa427d6","type":"inject","z":"dc9cf18bb9eee563","name":"","props":[{"p":"payload"},{"p":"topic","v":"[{\"dataField\":\"Package\",\"capture\":\"Package\",\"width\":\"auto\"},{\"dataField\":\"Product\",\"capture\":\"Product\",\"width\":\"auto\"},{\"dataField\":\"LotId\",\"capture\":\"LotID\",\"width\":\"auto\"},{\"dataField\":\"Destination\",\"capture\":\"Destination\",\"width\":\"100\"},{\"dataField\":\"Quantity\",\"capture\":\"Quantity\",\"width\":\"100\"},{\"dataField\":\"Remark\",\"capture\":\"Remark\",\"width\":\"auto\"},{\"dataField\":\"User\",\"capture\":\"User\",\"width\":\"80\"},{\"dataField\":\"TypeReport\",\"capture\":\"TypeReport\",\"width\":\"100\"}]","vt":"json"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":180,"y":500,"wires":[["3f4d218b69c4842e"]]},{"id":"267da29bf389f8b6","type":"Scada Web Setup Alarm","z":"dc9cf18bb9eee563","name_page":"Setup Alarm","levelAccess":0,"x":490,"y":500,"wires":[["4e5b6f02059606e5"]]},{"id":"4e5b6f02059606e5","type":"Scada Web User","z":"dc9cf18bb9eee563","name_page":"User","levelAccess":10,"x":670,"y":500,"wires":[["1dc4812e0e3371f2"]]},{"id":"1dc4812e0e3371f2","type":"Scada Web Manage Variable","z":"dc9cf18bb9eee563","name_page":"Manage Variables","levelAccess":"0","x":870,"y":500,"wires":[["9188af99a8750c2a"]]},{"id":"73cd15f814814649","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"BASIC 1","width":"1450","height":"655","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada","x":260,"y":920,"wires":[["84c33b6bb0945f7d"]]},{"id":"84c33b6bb0945f7d","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Robot - ePLC","width":"1450","height":"655","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_Robot_ePLC","x":460,"y":920,"wires":[["24eebb77830dd1be"]]},{"id":"24eebb77830dd1be","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"SYSMAC 1","width":"1450","height":"655","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_Sysmac1","x":690,"y":920,"wires":[["0ff14b9fd3f90d40"]]},{"id":"0ff14b9fd3f90d40","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"SYSMAC 2","width":"1450","height":"655","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_Sysmac2","x":890,"y":920,"wires":[[]]},{"id":"146efe603cd9c5cf","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Mobile Robot - Manage Product","width":"1700","height":"900","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_MobileRobot_Manage_Product","x":250,"y":720,"wires":[["145728c797c9a0ca"]]},{"id":"145728c797c9a0ca","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Mobile Robot - Line","width":"1700","height":"900","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_MobileRobot","nameIcon":"","x":550,"y":720,"wires":[["94056e0121df7304"]]},{"id":"94056e0121df7304","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Mobile Robot - Warehouse","width":"1700","height":"900","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_MobileRobot_Warehouse","require_login":"true","x":820,"y":720,"wires":[["f856559d90f6a4f8"]]},{"id":"f856559d90f6a4f8","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Mobile Robot - History","width":"1700","height":"900","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_MobileRobot_History","nameIcon":"","x":220,"y":780,"wires":[["17e5a4cd78f866b9"]]},{"id":"7b8c666ce49eb3d5","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Training KPI","width":"1450","height":"655","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada5","x":1150,"y":660,"wires":[[]]},{"id":"17e5a4cd78f866b9","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Horizontal Machine","width":"1952","height":"962","backgroundColor":"457b9d","backgroundImage":"HorizontalMachine","idPage":"Scada6","x":810,"y":780,"wires":[["1cc1220262ecdc00"]]},{"id":"1cc1220262ecdc00","type":"Scada Web End","z":"dc9cf18bb9eee563","x":810,"y":840,"wires":[]},{"id":"6aa73ac6799717bd","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Mobile Robot - Control","width":"1700","height":"900","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_MobileRobot_Control","require_login":"true","nameIcon":"","x":220,"y":680,"wires":[["1ae63dcf519f9881"]]},{"id":"3d1cc4d5e5890deb","type":"inject","z":"dc9cf18bb9eee563","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":400,"y":200,"wires":[["30f9ecc03c033b18"]]},{"id":"4a54daea0e1f9cf4","type":"function","z":"dc9cf18bb9eee563","name":"Check Destination","func":"var Variable = global.get(\"Variable\");\nvar VariableSystem = global.get(\"VariableSystem\");\nif (Variable.ListString[0][25] !== '' && global.get('OldDestination') != Variable.ListString[0][25]){\n    global.set('OldDestination', Variable.ListString[0][25])\n    node.warn(Variable.ListString[0][25])\n    VariableSystem.COMMUNICATION_MOBILE_ROBOT[1].write(`goto ${Variable.ListString[0][25]}\\r\\n`)\n}\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1350,"y":340,"wires":[[]]},{"id":"e380d9f75d81f77e","type":"inject","z":"dc9cf18bb9eee563","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1160,"y":340,"wires":[["4a54daea0e1f9cf4"]]},{"id":"8bd409be51a31413","type":"function","z":"dc9cf18bb9eee563","name":"Reset Old","func":"global.set('OldDestination', '')\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1320,"y":240,"wires":[[]]},{"id":"f1bbb07feb91272a","type":"inject","z":"dc9cf18bb9eee563","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1170,"y":240,"wires":[["8bd409be51a31413"]]},{"id":"1d7851b81c64ca0f","type":"function","z":"dc9cf18bb9eee563","name":"---","func":"var Variable = global.get(\"Variable\");\nvar VariableSystem = global.get(\"VariableSystem\");\nVariableSystem.COMMUNICATION_MOBILE_ROBOT[1].write(`status\\r\\n`)","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1310,"y":420,"wires":[[]]},{"id":"fa2b5771612886e4","type":"inject","z":"dc9cf18bb9eee563","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1150,"y":420,"wires":[["1d7851b81c64ca0f"]]},{"id":"3ec021e3ca4f0699","type":"function","z":"dc9cf18bb9eee563","name":"function 55","func":"var Variable = global.get(\"Variable\");\nVariable.TextField[1][1] = msg.payload\n\nglobal.set('CheckStatusMobileRobot', 3)\nif (msg.payload.includes('Failed going to goal') || msg.payload.includes('Parking')) {\n    global.set('OldExecute', '')\n}\nif (msg.payload.includes(`Arrived at ${Variable.ListString[0][25]}`) && Variable.ListString[0][25] != global.get('OldCheckDestination')) {\n    global.set('OldCheckDestination', Variable.ListString[0][25])\n    node.send(msg)\n}\nif (msg.payload.includes('StateOfCharge')) {\n    // const getValue = (label) => {\n    //     const regex = new RegExp(`${label}:\\\\s*([\\\\w.]+)`);\n    //     const match = msg.payload.match(regex);\n    //     return match ? (isNaN(match[1]) ? match[1] : parseFloat(match[1])) : null;\n    // };\n    const getValue = (label) => {\n        const regex = new RegExp(`${label}:\\\\s*(.*)`);\n        const match = msg.payload.match(regex);\n        return match ? (isNaN(match[1]) ? match[1].trim() : parseFloat(match[1])) : null;\n    };\n\n\n    const stateOfCharge = getValue(\"StateOfCharge\");\n    const temperature = getValue(\"Temperature\");\n    const status = getValue(\"Status\");\n    Variable.Number[1][1] = stateOfCharge\n    Variable.Number[1][2] = temperature\n    Variable.ListString[1][0] = status\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":320,"wires":[["19c820188a150a81"]]},{"id":"19c820188a150a81","type":"link out","z":"dc9cf18bb9eee563","name":"link out 33","mode":"link","links":[],"x":825,"y":320,"wires":[]},{"id":"2b591a8fb8240771","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Vibration","width":"1700","height":"900","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_Vibration","require_login":"false","nameIcon":"","x":440,"y":560,"wires":[["a7e36dc855be57ed"]]},{"id":"9188af99a8750c2a","type":"Scada Web Main Page","z":"dc9cf18bb9eee563","name_page":"Main Page","width":1920,"height":1080,"backgroundColor":"transparent","backgroundImage":"","idPage":"MainPage","notShowOnMenu":true,"nameIcon":"","x":210,"y":560,"wires":[["2b591a8fb8240771"]]},{"id":"1ed690b4b865f98d","type":"mqtt out","z":"dc9cf18bb9eee563","name":"","topic":"Mqtt_Vibration","qos":"0","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"cf0ae1d58e6000b5","x":1220,"y":1120,"wires":[]},{"id":"9b211fa707f188b4","type":"function","z":"dc9cf18bb9eee563","name":"Insert Data","func":"//** INSET DATABASE **//\nvar Variable = global.get(\"Variable\");\nlet Id = 'a' + Math.random().toString(36);\nlet CycleTime = 1000;\nlet PosServo = 200\nmsg.topic = `INSERT INTO VibrationCycleTime (_id,  CycleTime, PosServo, TimeCreate) VALUES ($Id, $CycleTime, $PosServo, $TimeCreate)`\nmsg.payload = [Id, CycleTime, PosServo, Date.now()]\nnode.send(msg)\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":1060,"wires":[["b3f6906b15923d8d"]]},{"id":"b5fe4916c41c5358","type":"function","z":"dc9cf18bb9eee563","name":"Create Table","func":"msg.topic = `CREATE TABLE IF NOT EXISTS VibrationCycleTime (\n    _id TEXT UNIQUE,\n    CycleTime REAL,\n    PosServo REAL,\n    TimeCreate INTEGER\n)`;\nnode.send(msg)\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":1000,"wires":[["ea262af323bc8654"]]},{"id":"ad2e1df66f8906ef","type":"inject","z":"dc9cf18bb9eee563","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":1000,"wires":[["b5fe4916c41c5358"]]},{"id":"4eacf14b5d9d399f","type":"function","z":"dc9cf18bb9eee563","name":"Query DB","func":"let start_time = msg.req.params.start_time\nlet stop_time = msg.req.params.stop_time\nmsg.topic = `SELECT * FROM ChuSeKCS_NhietDo_Nito WHERE TimeCreate BETWEEN($start_time) AND($stop_time)`\nmsg.payload = [start_time, stop_time]\n\nreturn msg;\n\n\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":1220,"wires":[["1be3d05f7972a78c"]]},{"id":"7460c613ae83da60","type":"http in","z":"dc9cf18bb9eee563","name":"","url":"/Mqtt_KCS_NhietDo_Nito/:start_time/:stop_time","method":"get","upload":false,"swaggerDoc":"","x":260,"y":1220,"wires":[["4eacf14b5d9d399f"]]},{"id":"f05356fa808df76d","type":"function","z":"dc9cf18bb9eee563","name":"Convert Timestamp To String","func":"// function convertTimestamps(dataArray) {\n//     return dataArray.map(item => {\n//         let date = new Date(item.TimeCreate);\n//         let currDate = new Date(date.toLocaleString('en-US', { timeZone: \"Asia/Ho_Chi_Minh\" }));\n//         let ConvertTime = (currDate.getHours() < 10 ? \"0\" : '') + currDate.getHours() + ':' + (currDate.getMinutes() < 10 ? \"0\" : '') + currDate.getMinutes() + ':' + (currDate.getSeconds() < 10 ? \"0\" : '') + currDate.getSeconds()\n\n//         return { ...item, TimeCreate: ConvertTime };\n//     });\n// }\n\n// // Convert timestamps\n// msg.payload = convertTimestamps(msg.payload);\n// return msg;\n\n\n\nfunction convertTimestamps(dataArray) {\n    return dataArray.map(item => {\n        let date = new Date(item.TimeCreate);\n        let currDate = new Date(date.toLocaleString('en-US', { timeZone: \"Asia/Ho_Chi_Minh\" }));\n\n        // Format the date part (Day/Month/Year)\n        let day = currDate.getDate();\n        let month = currDate.getMonth() + 1; // Months are zero based\n        let year = currDate.getFullYear();\n        let datePart = `${(day < 10 ? '0' : '')}${day}-${(month < 10 ? '0' : '')}${month}-${year}`;\n\n        // Format the time part (Hour-Minute-Second)\n        let hour = currDate.getHours();\n        let minute = currDate.getMinutes();\n        let second = currDate.getSeconds();\n        let timePart = `${(hour < 10 ? '0' : '')}${hour}:${(minute < 10 ? '0' : '')}${minute}`;\n\n        // Combine date and time parts\n        let ConvertTime = `${timePart}`;\n\n        return { ...item, TimeCreate: ConvertTime };\n    });\n}\n\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\"\n    + (currentdate.getMonth() + 1) + \"/\"\n    + currentdate.getFullYear() + \" _ \"\n    + currentdate.getHours() + \":\"\n    + currentdate.getMinutes() + \":\"\n    + currentdate.getSeconds();\n\nmsg.payload =  convertTimestamps(msg.payload)\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1060,"y":1220,"wires":[["4f6114a9bc103f3a"]]},{"id":"4f6114a9bc103f3a","type":"http response","z":"dc9cf18bb9eee563","name":"Response","statusCode":"","headers":{},"x":1300,"y":1220,"wires":[]},{"id":"9df594154539c1fb","type":"inject","z":"dc9cf18bb9eee563","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":250,"y":1060,"wires":[["9b211fa707f188b4"]]},{"id":"ff9697d34e3ac9b3","type":"function","z":"dc9cf18bb9eee563","name":"Query DB","func":"\nmsg.topic = `SELECT * FROM VibrationCycleTime`\nmsg.payload = []\n\nreturn msg;\n\n\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":1120,"wires":[["fb2dda5ac20c9cd6"]]},{"id":"55b1ad7c78650346","type":"function","z":"dc9cf18bb9eee563","name":"Convert Timestamp To String","func":"// function convertTimestamps(dataArray) {\n//     return dataArray.map(item => {\n//         let date = new Date(item.TimeCreate);\n//         let currDate = new Date(date.toLocaleString('en-US', { timeZone: \"Asia/Ho_Chi_Minh\" }));\n//         let ConvertTime = (currDate.getHours() < 10 ? \"0\" : '') + currDate.getHours() + ':' + (currDate.getMinutes() < 10 ? \"0\" : '') + currDate.getMinutes() + ':' + (currDate.getSeconds() < 10 ? \"0\" : '') + currDate.getSeconds()\n\n//         return { ...item, TimeCreate: ConvertTime };\n//     });\n// }\n\n// // Convert timestamps\n// msg.payload = convertTimestamps(msg.payload);\n// return msg;\n\n\n\nfunction convertTimestamps(dataArray) {\n    return dataArray.map(item => {\n        let date = new Date(item.TimeCreate);\n        let currDate = new Date(date.toLocaleString('en-US', { timeZone: \"Asia/Ho_Chi_Minh\" }));\n\n        // Format the date part (Day/Month/Year)\n        let day = currDate.getDate();\n        let month = currDate.getMonth() + 1; // Months are zero based\n        let year = currDate.getFullYear();\n        let datePart = `${(day < 10 ? '0' : '')}${day}-${(month < 10 ? '0' : '')}${month}-${year}`;\n\n        // Format the time part (Hour-Minute-Second)\n        let hour = currDate.getHours();\n        let minute = currDate.getMinutes();\n        let second = currDate.getSeconds();\n        let timePart = `${(hour < 10 ? '0' : '')}${hour}:${(minute < 10 ? '0' : '')}${minute}`;\n\n        // Combine date and time parts\n        let ConvertTime = `${timePart}`;\n\n        return { ...item, TimeCreate: ConvertTime };\n    });\n}\n\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\"\n    + (currentdate.getMonth() + 1) + \"/\"\n    + currentdate.getFullYear() + \" _ \"\n    + currentdate.getHours() + \":\"\n    + currentdate.getMinutes() + \":\"\n    + currentdate.getSeconds();\n\nmsg.payload =  convertTimestamps(msg.payload)\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":1120,"wires":[["1ed690b4b865f98d"]]},{"id":"a7e36dc855be57ed","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Cobot","width":"1700","height":"900","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Cobot","require_login":"false","nameIcon":"","x":630,"y":560,"wires":[["1e018422910110cb"]]},{"id":"439df5510f8b7859","type":"mqtt in","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"","topic":"Variable/Bit","qos":"0","datatype":"auto-detect","broker":"cf0ae1d58e6000b5","nl":false,"rap":true,"rh":0,"inputs":0,"x":190,"y":1320,"wires":[["8fdbbb2b275fa32d"]]},{"id":"8fdbbb2b275fa32d","type":"function","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"Convert Bit Omron","func":"let data = '';\nif (Array.isArray(msg.payload)) {\n    msg.payload.forEach(function (element) {\n        data += `${element.nameTag}\\tBOOL\\t\\t%D${element.tag}\\tTRUE\\tFALSE\\tDo not publish\\n`;\n    });\n}\nmsg.payload = data; // Remove any trailing newlines\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":1320,"wires":[["c6862ae55330b2db"]]},{"id":"c6862ae55330b2db","type":"mqtt out","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"","topic":"Variable/BitProcess","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"cf0ae1d58e6000b5","x":730,"y":1320,"wires":[]},{"id":"da792e477ecfa9e0","type":"function","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"Convert String Omron","func":"let data = '';\nif (Array.isArray(msg.payload)) {\n    msg.payload.forEach(function (element) {\n        data += `${element.nameTag}\\tSTRING[40]\\t\\t%D${element.tag}\\tTRUE\\tFALSE\\tDo not publish\\n`;\n    });\n}\nmsg.payload = data; // Remove any trailing newlines\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":1440,"wires":[["c5e0539cf3a7dc86"]]},{"id":"bb27f69b159c3f02","type":"mqtt in","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"","topic":"Variable/String","qos":"0","datatype":"auto-detect","broker":"cf0ae1d58e6000b5","nl":false,"rap":true,"rh":0,"inputs":0,"x":200,"y":1440,"wires":[["da792e477ecfa9e0"]]},{"id":"c5e0539cf3a7dc86","type":"mqtt out","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"","topic":"Variable/StringProcess","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"cf0ae1d58e6000b5","x":740,"y":1440,"wires":[]},{"id":"c165e8f8551a24b3","type":"function","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"Convert Number Omron","func":"let data = '';\nif (Array.isArray(msg.payload)) {\n    msg.payload.forEach(function (element) {\n        data += `${element.nameTag}\\tInt\\t\\t%D${element.tag}\\tTRUE\\tFALSE\\tDo not publish\\n`;\n    });\n}\nmsg.payload = data; // Remove any trailing newlines\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":1380,"wires":[["c2046126a48ff072"]]},{"id":"e862786273c2c715","type":"mqtt in","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"","topic":"Variable/Number","qos":"0","datatype":"auto-detect","broker":"cf0ae1d58e6000b5","nl":false,"rap":true,"rh":0,"inputs":0,"x":200,"y":1380,"wires":[["c165e8f8551a24b3"]]},{"id":"c2046126a48ff072","type":"mqtt out","z":"dc9cf18bb9eee563","g":"2616ecf5c6a8dfdb","name":"","topic":"Variable/NumberProcess","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"cf0ae1d58e6000b5","x":750,"y":1380,"wires":[]},{"id":"1ae63dcf519f9881","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"Mobile Robot - Program","width":"1700","height":"900","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_MobileRobot_Program","require_login":"true","nameIcon":"","x":510,"y":680,"wires":[["146efe603cd9c5cf"]]},{"id":"94e12ed70aada921","type":"function","z":"dc9cf18bb9eee563","name":"Get DB","func":"\nmsg.payload=global.get(\"ConfigPageServer\")\nnode.send(msg);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":840,"wires":[["b6b8b5361d906e74"]]},{"id":"3b01f0045eb6e20a","type":"http in","z":"dc9cf18bb9eee563","name":"/ConfigPage","url":"/ConfigPage","method":"get","upload":false,"swaggerDoc":"","x":190,"y":840,"wires":[["94e12ed70aada921"]]},{"id":"b6b8b5361d906e74","type":"http response","z":"dc9cf18bb9eee563","name":"Response","statusCode":"200","headers":{"content-type":"application/json"},"x":520,"y":840,"wires":[]},{"id":"1e018422910110cb","type":"Scada Web Page","z":"dc9cf18bb9eee563","name_page":"COBOT - Program","width":"1700","height":"1000","backgroundColor":"457b9d","backgroundImage":"2","idPage":"Scada_Cobot_Program","require_login":"true","nameIcon":"","x":830,"y":560,"wires":[["6aa73ac6799717bd"]]},{"id":"12ced6e410446749","type":"plc_modbus","z":"dc9cf18bb9eee563","name":"","idModbus":"1","host":"192.168.1.110","port":502,"indexPLC":"2","topic":"","debug":false,"PLC_Interval":500,"x":450,"y":420,"wires":[[]]},{"id":"82f7759fd19683d8","type":"function","z":"dc9cf18bb9eee563","name":"function 61","func":"var Variable = global.get(\"Variable\");\nvar VariableSystem = global.get(\"VariableSystem\");\nnode.warn(Variable.Bit);\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":100,"wires":[[]]},{"id":"f0266c448c5b16ae","type":"inject","z":"dc9cf18bb9eee563","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":680,"y":100,"wires":[["82f7759fd19683d8"]]},{"id":"b3f6906b15923d8d","type":"sqlite","z":"dc9cf18bb9eee563","mydb":"1cb8e3989b105072","sqlquery":"msg.topic","sql":"","name":"Execute Insert Data","x":630,"y":1060,"wires":[["ff9697d34e3ac9b3"]]},{"id":"ea262af323bc8654","type":"sqlite","z":"dc9cf18bb9eee563","mydb":"1cb8e3989b105072","sqlquery":"msg.topic","sql":"","name":"Execute Create Table","x":520,"y":1000,"wires":[[]]},{"id":"1be3d05f7972a78c","type":"sqlite","z":"dc9cf18bb9eee563","mydb":"1cb8e3989b105072","sqlquery":"msg.topic","sql":"SELECT * FROM Lora\nWHERE TimeCreate BETWEEN (1484086810000) AND (1684986810000)\n","name":"Get Database","x":800,"y":1220,"wires":[["f05356fa808df76d"]]},{"id":"fb2dda5ac20c9cd6","type":"sqlite","z":"dc9cf18bb9eee563","mydb":"1cb8e3989b105072","sqlquery":"msg.topic","sql":"SELECT * FROM Lora\nWHERE TimeCreate BETWEEN (1484086810000) AND (1684986810000)\n","name":"Get Database","x":720,"y":1120,"wires":[["55b1ad7c78650346"]]}]