import { OnModuleInit } from '@nestjs/common';
import { Repository, EntityManager } from 'typeorm';
import { BitEntity } from '../scada_bit/scada_bit.entity';
import { CameraStreamEntity } from '../scada_camera_stream/scada_camera_stream.entity';
import { ChartEntity } from '../scada_chart/scada_chart.entity';
import { DateTimePickerEntity } from '../scada_date-time-picker/scada_dateTimePicker.entity';
import { DesignEntity } from '../scada_design/scada_design.entity';
import { DesignTableEntity } from '../scada_design_table/scada_design_table.entity';
import { ElementEntity } from '../scada_element/scada_element.entity';
import { GaugeEntity } from '../scada_gauge/scada_gauge.entity';
import { ProgressBarEntity } from '../scada_progress_bar/scada_progress_bar.entity';
import { SliderEntity } from '../scada_slider/scada_slider.entity';
import { GridViewEntity } from '../scada_gridView/scada_gridView.entity';
import { LabelEntity } from '../scada_label/scada_label.entity';
import { LineEntity } from '../scada_line/scada_line.entity';
import { MapEntity } from '../scada_map/scada_map.entity';
import { NavigateEntity } from '../scada_navigate/scada_navigate.entity';
import { NumberEntity } from '../scada_number/scada_number.entity';
import { PanelEntity } from '../scada_panel/scada_panel.entity';
import { PopupEntity } from '../scada_popup/scada_popup.entity';
import { PrintEntity } from '../scada_print/scada_print.entity';
import { SelectEntity } from '../scada_select/scada_select.entity';
import { SetupAlarmEntity } from '../scada_setup-alarm/scada_setup-alarm.entity';
import { StringEntity } from '../scada_string/scada_string.entity';
import { TextFieldEntity } from '../scada_text-field/scada_text-field.entity';
import { ViewImageEntity } from '../scada_viewImage/scada_viewImage.entity';
import { ReportEntity } from '../scada_report/scada_report.entity';
import { _3DEntity } from '../scada_3D/scada_3D.entity';
export declare class ScadaTotalService implements OnModuleInit {
    private readonly bitRepository;
    private readonly cameraStreamRepository;
    private readonly chartRepository;
    private readonly dateTimePickerRepository;
    private readonly designRepository;
    private readonly designTableRepository;
    private readonly elementRepository;
    private readonly gaugeRepository;
    private readonly progressBarRepository;
    private readonly sliderRepository;
    private readonly gridViewRepository;
    private readonly labelRepository;
    private readonly lineRepository;
    private readonly mapRepository;
    private readonly navigateRepository;
    private readonly numberRepository;
    private readonly panelRepository;
    private readonly popupRepository;
    private readonly printRepository;
    private readonly selectRepository;
    private readonly setupAlarmRepository;
    private readonly stringRepository;
    private readonly textFieldRepository;
    private readonly viewImageRepository;
    private readonly _3DRepository;
    private readonly reportRepository;
    private readonly entityManager;
    private intervalId;
    constructor(bitRepository: Repository<BitEntity>, cameraStreamRepository: Repository<CameraStreamEntity>, chartRepository: Repository<ChartEntity>, dateTimePickerRepository: Repository<DateTimePickerEntity>, designRepository: Repository<DesignEntity>, designTableRepository: Repository<DesignTableEntity>, elementRepository: Repository<ElementEntity>, gaugeRepository: Repository<GaugeEntity>, progressBarRepository: Repository<ProgressBarEntity>, sliderRepository: Repository<SliderEntity>, gridViewRepository: Repository<GridViewEntity>, labelRepository: Repository<LabelEntity>, lineRepository: Repository<LineEntity>, mapRepository: Repository<MapEntity>, navigateRepository: Repository<NavigateEntity>, numberRepository: Repository<NumberEntity>, panelRepository: Repository<PanelEntity>, popupRepository: Repository<PopupEntity>, printRepository: Repository<PrintEntity>, selectRepository: Repository<SelectEntity>, setupAlarmRepository: Repository<SetupAlarmEntity>, stringRepository: Repository<StringEntity>, textFieldRepository: Repository<TextFieldEntity>, viewImageRepository: Repository<ViewImageEntity>, _3DRepository: Repository<_3DEntity>, reportRepository: Repository<ReportEntity>, entityManager: EntityManager);
    onModuleInit(): void;
    insert(totalData: any): Promise<any>;
    delete(totalData: any[]): Promise<any>;
}
